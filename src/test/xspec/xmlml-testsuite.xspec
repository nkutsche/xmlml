<?xml version="1.0" encoding="UTF-8"?>
<x:description xmlns:x="http://www.jenitennison.com/xslt/xspec" xmlns:mlml="http://www.nkutsche.com/xmlml"  xmlns:map="http://www.w3.org/2005/xpath-functions/map" stylesheet="../../main/resources/xsl/xmlml-main.xsl">
    <x:helper stylesheet="helper.xsl"/>
    
    <x:variable name="test-config" select="mlml:detect-default-config()"/>
    <x:variable name="samples" href="samples/dummy.xml" select="base-uri(/)"/>

    <x:scenario label="generic-serialize-test" shared="true" catch="true">

        <x:variable name="xml-path" select="resolve-uri('xml/' || $path, $samples)"/>
        <x:variable name="xmlml-path" select="resolve-uri('xmlml/' || $path, $samples)"/>
        <x:variable name="xml" select="unparsed-text($xml-path)"/>
        <x:variable name="xmlml" select="doc($xmlml-path)/*"/>

        <x:scenario label="xmlml -> xml">
            <x:call function="mlml:serialize">
                <x:param select="$xmlml"/>
            </x:call>

            <x:expect label="XMLML serialized" select="$xml"/>
        </x:scenario>

        <x:scenario label="xml -> xmlml">
            <x:call function="mlml:parse">
                <x:param select="$xml-path"/>
                <x:param select="$test-config"/>
            </x:call>

            <x:expect label="XMLML tree" select="mlml:clean-up($xmlml)"/>
        </x:scenario>

        <x:scenario label="mlml:doc(xmlxml) -> doc(xml)">
            <x:call function="mlml:doc">
                <x:param select="$xmlml"/>
            </x:call>

            <x:expect label="XMLML as XDM" select="doc($xml-path)"/>
        </x:scenario>

    </x:scenario>

    <x:scenario label="generic-serialize-test-no-xerces" shared="true" catch="true">
        <x:variable name="samples" href="samples/dummy.xml" select="base-uri(/)"/>

        <x:variable name="xml-path" select="resolve-uri('xml/' || $path, $samples)"/>
        <x:variable name="xmlml-path" select="resolve-uri('xmlml/' || $path, $samples)"/>
        <x:variable name="xml" select="unparsed-text($xml-path)"/>
        <x:variable name="xmlml" select="doc($xmlml-path)/*"/>

        <x:scenario label="xmlml -> xml">
            <x:call function="mlml:serialize">
                <x:param select="$xmlml"/>
            </x:call>

            <x:expect label="XMLML serialized" select="$xml"/>
        </x:scenario>

        <x:scenario label="xml -> xmlml">
            <x:call function="mlml:parse">
                <x:param select="$xml-path"/>
                <x:param select="$test-config"/>
            </x:call>

            <x:expect label="XMLML tree" select="mlml:clean-up($xmlml)"/>
        </x:scenario>

    </x:scenario>

    <x:scenario label="code-point-serialized" shared="true" catch="true">
        <x:variable name="samples" href="samples/dummy.xml" select="base-uri(/)"/>

        <x:variable name="xml-path" select="resolve-uri('xml/' || $path, $samples)"/>
        <x:variable name="xmlml-path" select="resolve-uri('xmlml/' || $path, $samples)"/>
        <x:variable name="xml" select="unparsed-text($xml-path)"/>
        <x:variable name="xmlml" select="doc($xmlml-path)/*"/>

        <x:scenario label="xmlml -> xml">
            <x:call function="mlml:serialize">
                <x:param select="$xmlml"/>
            </x:call>

            <x:expect label="XMLML serialized" select="translate($xml, ' ', '_')" test="translate($x:result, ' ', '_')"/>
        </x:scenario>


    </x:scenario>
    
<!--    
    Use this XPath expression to create scenarios:
    
    let $base-uri := /Q{http://www.nkutsche.com/xmlml}document/base-uri()
    return
    
    let $relpath :=  substring-after($base-uri, '/xmlml/')
    return
    
    '<x:scenario label="Test: ' ||  $relpath || '">
    <x:variable name="path" select="''' || $relpath || '''"/>
    <x:like label="generic-serialize-test"/>
    </x:scenario>'
    -->
    
    <x:scenario label="Dir: attribute/" catch="true">
        <x:scenario label="Test: attribute/combine-all.xml">
            <x:variable name="path" select="'attribute/combine-all.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: attribute/default-attribute.xml">
            <x:variable name="path" select="'attribute/default-attribute.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: attribute/empty-value.xml">
            <x:variable name="path" select="'attribute/empty-value.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: attribute/ending-name-ws-attribute.xml">
            <x:variable name="path" select="'attribute/ending-name-ws-attribute.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: attribute/leading-value-ws-attribute.xml">
            <x:variable name="path" select="'attribute/leading-value-ws-attribute.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: attribute/leading-ws-attribute.xml">
            <x:variable name="path" select="'attribute/leading-ws-attribute.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: attribute/leading-ws-attribute.xml">
            <x:variable name="path" select="'attribute/leading-ws-attribute.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: attribute/leading-ws-two-attributes.xml">
            <x:variable name="path" select="'attribute/leading-ws-two-attributes.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: attribute/overwrite-default-attr.xml">
            <x:variable name="path" select="'attribute/overwrite-default-attr.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: attribute/single-attribute.xml">
            <x:variable name="path" select="'attribute/single-attribute.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: attribute/single-quote-attribute.xml">
            <x:variable name="path" select="'attribute/single-quote-attribute.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: attribute/tab-as-value.xml">
            <x:variable name="path" select="'attribute/tab-as-value.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: attribute/types.xml">
            <x:variable name="path" select="'attribute/types.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: attribute/types-entities.xml">
            <x:variable name="path" select="'attribute/types-entities.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: attribute/types-invalid-nmtokens.xml">
            <x:variable name="path" select="'attribute/types-invalid-nmtokens.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
    </x:scenario>

    <x:scenario label="Dir: cdata-sections/" catch="true">
        <x:scenario label="Test: cdata-sections/cdata-mixed.xml">
            <x:variable name="path" select="'cdata-sections/cdata-mixed.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: cdata-sections/cdata-trivial.xml">
            <x:variable name="path" select="'cdata-sections/cdata-trivial.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: cdata-sections/cdata-w-spec-chars.xml">
            <x:variable name="path" select="'cdata-sections/cdata-w-spec-chars.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: cdata-sections/cdata-w-spec-chars2.xml">
            <x:variable name="path" select="'cdata-sections/cdata-w-spec-chars2.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: cdata-sections/cdata-w-whitespace.xml">
            <x:variable name="path" select="'cdata-sections/cdata-w-whitespace.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
    </x:scenario>

    <x:scenario label="Dir: comment/" catch="true">
        <x:scenario label="Test: comment/comment-trivial.xml">
            <x:variable name="path" select="'comment/comment-trivial.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: comment/comment-w-special-chars.xml">
            <x:variable name="path" select="'comment/comment-w-special-chars.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: comment/comment-w-whitespace.xml">
            <x:variable name="path" select="'comment/comment-w-whitespace.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
    </x:scenario>

    <x:scenario label="Dir: doc/" catch="true">
        <x:scenario label="Test: doc/dtdDecl-system.xml">
            <x:variable name="path" select="'doc/dtdDecl-system.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: doc/dtdDecl.xml">
            <x:variable name="path" select="'doc/dtdDecl.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: doc/leading-whitespace.xml">
            <x:variable name="path" select="'doc/leading-whitespace.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: doc/trivial.xml">
            <x:variable name="path" select="'doc/trivial.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: doc/xmlDecl-dtdDecl.xml">
            <x:variable name="path" select="'doc/xmlDecl-dtdDecl.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: doc/xmlDecl-encoding-8859-1.xml">
            <x:variable name="path" select="'doc/xmlDecl-encoding-8859-1.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: doc/xmlDecl-singlequote.xml">
            <x:variable name="path" select="'doc/xmlDecl-singlequote.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: doc/xmlDecl-standalone.xml">
            <x:variable name="path" select="'doc/xmlDecl-standalone.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: doc/xmlDecl.xml">
            <x:variable name="path" select="'doc/xmlDecl.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: doc/xmlDecl-spaces.xml">
            <x:variable name="path" select="'doc/xmlDecl-spaces.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
    </x:scenario>

    <x:scenario label="Dir: dtd/" catch="true">
        <x:scenario label="Test: dtd/implied-attribute.xml">
            <x:variable name="path" select="'dtd/implied-attribute.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: dtd/internal-and-external.xml">
            <x:variable name="path" select="'dtd/internal-and-external.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: dtd/required-attribute.xml">
            <x:variable name="path" select="'dtd/required-attribute.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: dtd/fixed-attribute.xml">
            <x:variable name="path" select="'dtd/fixed-attribute.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: dtd/percent-in-default-attr.xml">
            <x:variable name="path" select="'dtd/percent-in-default-attr.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: dtd/default-overwrite-attribute.xml">
            <x:variable name="path" select="'dtd/default-overwrite-attribute.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
    </x:scenario>
    
    <x:scenario label="Dir: element/" catch="true">
        <x:scenario label="Test: element/empty-collapsed-with-ws.xml">
            <x:variable name="path" select="'element/empty-collapsed-with-ws.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: element/empty-collapsed.xml">
            <x:variable name="path" select="'element/empty-collapsed.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: element/ending-endtag-ws.xml">
            <x:variable name="path" select="'element/ending-endtag-ws.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: element/ending-starttag-ws.xml">
            <x:variable name="path" select="'element/ending-starttag-ws.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
    </x:scenario>

    <x:scenario label="Dir: encoding/" catch="true">
        <x:scenario label="Test: encoding/utf8/specialchars-utf8.xml">
            <x:variable name="path" select="'encoding/utf8/specialchars-utf8.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
    </x:scenario>

    <x:scenario label="Dir: entity/" catch="true">
        <x:scenario label="Test: entity/character-entity-amp.xml">
            <x:variable name="path" select="'entity/character-entity-amp.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: entity/character-entity-cr.xml">
            <x:variable name="path" select="'entity/character-entity-cr.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: entity/character-entity-nl-in-attr.xml">
            <x:variable name="path" select="'entity/character-entity-nl-in-attr.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: entity/character-entity-w-text.xml">
            <x:variable name="path" select="'entity/character-entity-w-text.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: entity/character-entity.xml">
            <x:variable name="path" select="'entity/character-entity.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: entity/dtd-entity-w-text.xml">
            <x:variable name="path" select="'entity/dtd-entity-w-text.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: entity/entities-in-attr-mixed.xml">
            <x:variable name="path" select="'entity/entities-in-attr-mixed.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: entity/entity-in-attribute-char.xml">
            <x:variable name="path" select="'entity/entity-in-attribute-char.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: entity/entity-in-attribute-dtd.xml">
            <x:variable name="path" select="'entity/entity-in-attribute-dtd.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: entity/entity-in-attribute-predef.xml">
            <x:variable name="path" select="'entity/entity-in-attribute-predef.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: entity/entity-in-attribute-predef2.xml">
            <x:variable name="path" select="'entity/entity-in-attribute-predef2.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: entity/entity-in-default-attribute.xml">
            <x:variable name="path" select="'entity/entity-in-default-attribute.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: entity/entity-self-include-system.xml">
            <x:variable name="path" select="'entity/entity-self-include-system.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: entity/recursive-dtd-entity.xml">
            <x:variable name="path" select="'entity/recursive-dtd-entity.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: entity/trivial-dtd-entity.xml">
            <x:variable name="path" select="'entity/trivial-dtd-entity.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
    </x:scenario>

    <x:scenario label="Dir: linefeed-normalization/" catch="true">
        <x:scenario label="Test: linefeed-normalization/attr-break-as-entity.xml">
            <x:variable name="path" select="'linefeed-normalization/attr-break-as-entity.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: linefeed-normalization/attr.xml">
            <x:variable name="path" select="'linefeed-normalization/attr.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: linefeed-normalization/cdata.xml">
            <x:variable name="path" select="'linefeed-normalization/cdata.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: linefeed-normalization/comment.xml">
            <x:variable name="path" select="'linefeed-normalization/comment.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: linefeed-normalization/el.xml">
            <x:variable name="path" select="'linefeed-normalization/el.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: linefeed-normalization/entity.xml">
            <x:variable name="path" select="'linefeed-normalization/entity.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: linefeed-normalization/pi.xml">
            <x:variable name="path" select="'linefeed-normalization/pi.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: linefeed-normalization/root-epilog.xml">
            <x:variable name="path" select="'linefeed-normalization/root-epilog.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: linefeed-normalization/root-prolog.xml">
            <x:variable name="path" select="'linefeed-normalization/root-prolog.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: linefeed-normalization/text.xml">
            <x:variable name="path" select="'linefeed-normalization/text.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
    </x:scenario>



    <x:scenario label="Dir: pi/" catch="true">
        <x:scenario label="Test: pi/pi-in-dtd-inline.xml">
            <x:variable name="path" select="'pi/pi-in-dtd-inline.xml'"/>
            <x:variable name="test-config" select="map:put($test-config, $mlml:IGNORE-INLINE-DTD-PIS, false())"/>
            <!-- Ignore XDM compare, as Xerces result does not match to the XML TS for this case -->
            <x:like label="generic-serialize-test-no-xerces"/>
        </x:scenario>
        <x:scenario label="Test: pi/pi-trivial.xml">
            <x:variable name="path" select="'pi/pi-trivial.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: pi/pi-w-linebreak.xml">
            <x:variable name="path" select="'pi/pi-w-linebreak.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: pi/pi-w-spec-chars.xml">
            <x:variable name="path" select="'pi/pi-w-spec-chars.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: pi/pi-w-whitespace.xml">
            <x:variable name="path" select="'pi/pi-w-whitespace.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: pi/pi-wo-value-but-ws.xml">
            <x:variable name="path" select="'pi/pi-wo-value-but-ws.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: pi/pi-wo-value.xml">
            <x:variable name="path" select="'pi/pi-wo-value.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
    </x:scenario>
    
    <x:scenario label="Dir: root-el-comment-pi/" catch="true">
        <x:scenario label="Test: root-el-comment-pi/comment-before-dtd.xml">
            <x:variable name="path" select="'root-el-comment-pi/comment-before-dtd.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: root-el-comment-pi/root-comment.xml">
            <x:variable name="path" select="'root-el-comment-pi/root-comment.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: root-el-comment-pi/root-el.xml">
            <x:variable name="path" select="'root-el-comment-pi/root-el.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: root-el-comment-pi/root-epilog.xml">
            <x:variable name="path" select="'root-el-comment-pi/root-epilog.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: root-el-comment-pi/root-pi.xml">
            <x:variable name="path" select="'root-el-comment-pi/root-pi.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
    </x:scenario>

    <x:scenario label="Dir: namespace/" catch="true">
        <x:scenario label="Test: namespace/declarations/default-namespace-w-attribute.xml">
            <x:variable name="path" select="'namespace/declarations/default-namespace-w-attribute.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: namespace/declarations/default-namespace.xml">
            <x:variable name="path" select="'namespace/declarations/default-namespace.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: namespace/declarations/namespace-declaration-unused.xml">
            <x:variable name="path" select="'namespace/declarations/namespace-declaration-unused.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: namespace/declarations/namespace-inheritance.xml">
            <x:variable name="path" select="'namespace/declarations/namespace-inheritance.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: namespace/declarations/prefixed-attribute-inherit-ns.xml">
            <x:variable name="path" select="'namespace/declarations/prefixed-attribute-inherit-ns.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: namespace/declarations/prefixed-namespace.xml">
            <x:variable name="path" select="'namespace/declarations/prefixed-namespace.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: namespace/declarations/prefixed-w-attributes-after.xml">
            <x:variable name="path" select="'namespace/declarations/prefixed-w-attributes-after.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: namespace/declarations/prefixed-w-attributes-only-collapsed.xml">
            <x:variable name="path" select="'namespace/declarations/prefixed-w-attributes-only-collapsed.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: namespace/declarations/prefixed-w-attributes-only.xml">
            <x:variable name="path" select="'namespace/declarations/prefixed-w-attributes-only.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: namespace/declarations/prefixed-w-attributes.xml">
            <x:variable name="path" select="'namespace/declarations/prefixed-w-attributes.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: namespace/declarations/redundant-prefixed-declarations.xml">
            <x:variable name="path" select="'namespace/declarations/redundant-prefixed-declarations.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: namespace/with-dtd-attributes/default-ns-by-dtd.xml">
            <x:variable name="path" select="'namespace/with-dtd-attributes/default-ns-by-dtd.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: namespace/with-dtd-attributes/namespace-w-entity.xml">
            <x:variable name="path" select="'namespace/with-dtd-attributes/namespace-w-entity.xml'"/>
            <x:like label="generic-serialize-test"/>
            <x:scenario label="check namespace URIs">
                <x:call function="mlml:parse">
                    <x:param select="resolve-uri('xml/' || $path, $samples)"/>
                    <x:param select="$test-config"/>
                </x:call>
                <x:expect label="Check URI of ns namespace" test="($x:result//namespace::ns)[1]/string(.)" select="'my.namespace.com'"/>
                <x:expect label="Check URI of ns2 namespace" test="($x:result//namespace::ns2)[1]/string(.)" select="'my.namespace.com'"/>
            </x:scenario>
        </x:scenario>
        <x:scenario label="Test: namespace/with-dtd-attributes/overwrite-default-ns-decl.xml">
            <x:variable name="path" select="'namespace/with-dtd-attributes/overwrite-default-ns-decl.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: namespace/with-dtd-attributes/default-ns-by-dtd-w-prefix.xml">
            <x:variable name="path" select="'namespace/with-dtd-attributes/default-ns-by-dtd-w-prefix.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
    </x:scenario>
    <!--
        Currently it workse only with -strip:none
    -->
    <x:scenario label="Dir: whitespace/" catch="true">
        <x:scenario label="Test: whitespace/invalid-mixed-content.xml">
            <x:variable name="path" select="'whitespace/invalid-mixed-content.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: whitespace/unrecognized-by-dtd-empty.xml">
            <x:variable name="path" select="'whitespace/unrecognized-by-dtd-empty.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: whitespace/unrecognized-by-dtd.xml">
            <x:variable name="path" select="'whitespace/unrecognized-by-dtd.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
        <x:scenario label="Test: whitespace/whitespace-as-entity.xml">
            <x:variable name="path" select="'whitespace/whitespace-as-entity.xml'"/>
            <x:like label="generic-serialize-test"/>
        </x:scenario>
    </x:scenario>

    <x:scenario label="Testing function mlml:white-space" xmlns="http://www.nkutsche.com/xmlml">
        <x:call function="mlml:white-space">
            <x:param position="2" select="'#default'"/>
        </x:call>
        <x:scenario label="Single space">
            <x:call>
                <x:param select="' '"/>
            </x:call>
            <x:expect label="result">
                <ws space="1"/>
            </x:expect>
        </x:scenario>
        <x:scenario label="Single tab">
            <x:call>
                <x:param select="'&#x9;'"/>
            </x:call>
            <x:expect label="result">
                <ws tab="1"/>
            </x:expect>
        </x:scenario>
        <x:scenario label="Two spaces">
            <x:call>
                <x:param select="'  '"/>
            </x:call>
            <x:expect label="result">
                <ws space="2"/>
            </x:expect>
        </x:scenario>
        <x:scenario label="Three tabs">
            <x:call>
                <x:param select="'&#x9;&#x9;&#x9;'"/>
            </x:call>
            <x:expect label="result">
                <ws tab="3"/>
            </x:expect>
        </x:scenario>
        <x:scenario label="Mixed tabs with space">
            <x:call>
                <x:param select="'&#x9; &#x9;&#x9; '"/>
            </x:call>
            <x:expect label="result">
                <ws>
                    <tab/>
                    <space/>
                    <tab amount="2"/>
                    <space/>
                </ws>
            </x:expect>
        </x:scenario>
        <x:scenario label="breaks">
            <x:scenario label="Unix break \n">
                <x:call>
                    <x:param select="'&#xA;'"/>
                    <x:param select="'n'"/>
                </x:call>
                <x:expect label="result">
                    <ws nl="1"/>
                </x:expect>
            </x:scenario>
            <x:scenario label="MacOS break \r">
                <x:call>
                    <x:param select="'&#xD;'"/>
                    <x:param select="'r'"/>
                </x:call>
                <x:expect label="result">
                    <ws nl="1"/>
                </x:expect>
            </x:scenario>
            <x:scenario label="Windows break \r\n">
                <x:call>
                    <x:param select="'&#xD;&#xA;'"/>
                    <x:param select="'rn'"/>
                </x:call>
                <x:expect label="result">
                    <ws nl="1"/>
                </x:expect>
            </x:scenario>
        </x:scenario>
        <x:scenario label="multiple breaks">
            <x:scenario label="Unix break \n\n\n">
                <x:call>
                    <x:param select="'&#xA;&#xA;&#xA;'"/>
                    <x:param select="'n'"/>
                </x:call>
                <x:expect label="result">
                    <ws nl="3"/>
                </x:expect>
            </x:scenario>
            <x:scenario label="MacOS break \r\r\r">
                <x:call>
                    <x:param select="'&#xD;&#xD;&#xD;'"/>
                    <x:param select="'r'"/>
                </x:call>
                <x:expect label="result">
                    <ws nl="3"/>
                </x:expect>
            </x:scenario>
            <x:scenario label="Windows break \r\n\r\n\r\n\r\n">
                <x:call>
                    <x:param select="'&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'"/>
                    <x:param select="'rn'"/>
                </x:call>
                <x:expect label="result">
                    <ws nl="4"/>
                </x:expect>
            </x:scenario>
        </x:scenario>
        <x:scenario label="All mixed">
            <x:scenario label="\s\s\t\t\n\t\t\n\s\s">
                <x:call>
                    <x:param select="'  &#x9;&#x9;&#xA;&#x9;&#x9;&#xA;  '"/>
                    <x:param select="'n'"/>
                </x:call>
                <x:expect label="result">
                <ws>
                    <space amount="2"/>
                    <tab amount="2"/>
                    <nl/>
                    <tab amount="2"/>
                    <nl/>
                    <space amount="2"/>
                </ws>
            </x:expect>
            </x:scenario>
        </x:scenario>
    </x:scenario>
    
    <x:scenario label="Matching on attribute value">
<!--        
        <attributes
    token =	"b"
    nmtokens =	" this&#x0d;&#x0a; also	 gets&#x20; normalized "
    />
        -->
        <x:scenario label="Type nmtokens but invalid">
            <x:variable name="attribute">
                <attribute xmlns="http://www.nkutsche.com/xmlml" type="NMTOKENS">
                    <ws space="1"/>
                    <name>nmtokens</name>
                    <eq/>
                    <value>
                        <data> this</data>
                        <entity codepoint="x0d"/>
                        <entity codepoint="x0a"/>
                        <data> also   </data>
                    </value>
                </attribute>
            </x:variable>
            <x:scenario label="raw value">
                <x:context select="$attribute/mlml:value/node()" mode="mlml:doc"/>
                <x:expect label="value is untouched">
                    <x:text> this</x:text>
                    <x:text>&#xD;</x:text>
                    <x:text>&#xA;</x:text>
                    <x:text> also   </x:text>
                </x:expect>
                <x:expect label="codepoints" 
                    test="$x:result ! string-to-codepoints(.)" 
                    select="string-to-codepoints(' this&#xD;&#xA; also   ')"/>
            </x:scenario>
            <x:scenario label="converted value">
                <x:context select="$attribute/mlml:value" mode="mlml:doc"/>
                <x:expect label="value is untouched">
                    <x:text>this&#xD;&#xA; also</x:text>
                </x:expect>
                <x:expect label="codepoints" 
                    test="$x:result ! string-to-codepoints(.)" 
                    select="string-to-codepoints('this&#xD;&#xA; also')"/>
            </x:scenario>
        </x:scenario>

        <x:scenario label="Type idref valid">
            <x:variable name="attribute">
                <attribute xmlns="http://www.nkutsche.com/xmlml" type="IDREF">
                    <ws space="1"/>
                    <name>idref</name>
                    <eq/>
                    <value>
                        <data>   foo   </data>
                    </value>
                </attribute>
            </x:variable>
            <x:scenario label="raw value">
                <x:context select="$attribute/mlml:value/node()" mode="mlml:doc"/>
                <x:expect label="value is untouched">
                    <x:text>   foo   </x:text>
                </x:expect>
                <x:expect label="codepoints" 
                    test="$x:result ! string-to-codepoints(.)" 
                    select="string-to-codepoints('   foo   ')"/>
            </x:scenario>
            <x:scenario label="converted value">
                <x:context select="$attribute/mlml:value" mode="mlml:doc"/>
                <x:expect label="value is untouched">
                    <x:text>foo</x:text>
                </x:expect>
                <x:expect label="codepoints" 
                    test="$x:result ! string-to-codepoints(.)" 
                    select="string-to-codepoints('foo')"/>
            </x:scenario>
        </x:scenario>
    </x:scenario>

    <x:scenario label="Testing function mlml:type-validate">
        <x:call function="mlml:type-validate"/>
        
        <x:scenario label="type = 'IDREF'">
            <x:call>
                <x:param position="2" select="'IDREF'"/>
            </x:call>
            <x:scenario label="value = 'foo'">
                <x:call>
                    <x:param position="1" select="'foo'"/>
                </x:call>
                <x:expect label="is valid" select="true()"/>
            </x:scenario>
            <x:scenario label="value = '   foo   '">
                <x:call>
                    <x:param position="1" select="'   foo   '"/>
                </x:call>
                <x:expect label="is valid" select="true()"/>
            </x:scenario>
            <x:scenario label="value = '_foo'">
                <x:call>
                    <x:param position="1" select="'_foo'"/>
                </x:call>
                <x:expect label="is valid" select="true()"/>
            </x:scenario>
            <x:scenario label="value = '1foo'">
                <x:call>
                    <x:param position="1" select="'1foo'"/>
                </x:call>
                <x:expect label="is invalid" select="false()"/>
            </x:scenario>
            <x:scenario label="value = 'foo,bar'">
                <x:call>
                    <x:param position="1" select="'foo,bar'"/>
                </x:call>
                <x:expect label="is invalid" select="false()"/>
            </x:scenario>
            <x:scenario label="value = 'foo bar'">
                <x:call>
                    <x:param position="1" select="'foo bar'"/>
                </x:call>
                <x:expect label="is invalid" select="false()"/>
            </x:scenario>
        </x:scenario>

        <x:scenario label="type = 'IDREFS'">
            <x:call>
                <x:param position="2" select="'IDREFS'"/>
            </x:call>
            <x:scenario label="value = 'foo'">
                <x:call>
                    <x:param position="1" select="'foo'"/>
                </x:call>
                <x:expect label="is valid" select="true()"/>
            </x:scenario>
            <x:scenario label="value = '   foo   '">
                <x:call>
                    <x:param position="1" select="'   foo   '"/>
                </x:call>
                <x:expect label="is valid" select="true()"/>
            </x:scenario>
            <x:scenario label="value = '_foo'">
                <x:call>
                    <x:param position="1" select="'_foo'"/>
                </x:call>
                <x:expect label="is valid" select="true()"/>
            </x:scenario>
            <x:scenario label="value = '1foo'">
                <x:call>
                    <x:param position="1" select="'1foo'"/>
                </x:call>
                <x:expect label="is invalid" select="false()"/>
            </x:scenario>
            <x:scenario label="value = 'foo,bar'">
                <x:call>
                    <x:param position="1" select="'foo,bar'"/>
                </x:call>
                <x:expect label="is invalid" select="false()"/>
            </x:scenario>
            <x:scenario label="value = 'foo bar'">
                <x:call>
                    <x:param position="1" select="'foo bar'"/>
                </x:call>
                <x:expect label="is valid" select="true()"/>
            </x:scenario>
            <x:scenario label="value = '    foo     bar   '">
                <x:call>
                    <x:param position="1" select="'    foo     bar   '"/>
                </x:call>
                <x:expect label="is valid" select="true()"/>
            </x:scenario>
            <x:scenario label="value = '    foo&#xA;bar   '">
                <x:call>
                    <x:param position="1" select="'    foo&#xA;bar   '"/>
                </x:call>
                <x:expect label="is invalid" select="false()"/>
            </x:scenario>
            <x:scenario label="value = ' this&#x0d;&#x0a; also	 gets&#x20; normalized '">
                <x:call>
                    <x:param position="1" select="' this&#x0d;&#x0a; also	 gets&#x20; normalized '"/>
                </x:call>
                <x:expect label="is invalid" select="false()"/>
            </x:scenario>
        </x:scenario>
        
    </x:scenario>
    <x:scenario label="Testing function mlml:type-convert">
        <x:call function="mlml:type-convert"/>
        
        <x:scenario label="type = 'IDREF'">
            <x:call>
                <x:param position="2" select="'IDREF'"/>
            </x:call>
            <x:scenario label="value = 'foo'">
                <x:call>
                    <x:param position="1" select="'foo'"/>
                </x:call>
                <x:expect label="converted value" select="'foo'"/>
            </x:scenario>
            <x:scenario label="value = '   foo   '">
                <x:call>
                    <x:param position="1" select="'   foo   '"/>
                </x:call>
                <x:expect label="converted value" select="'foo'"/>
            </x:scenario>
            <x:scenario label="value = '_foo'">
                <x:call>
                    <x:param position="1" select="'_foo'"/>
                </x:call>
                <x:expect label="converted value" select="'_foo'"/>
            </x:scenario>
            <x:scenario label="value = '1foo'">
                <x:call>
                    <x:param position="1" select="'1foo'"/>
                </x:call>
                <x:expect label="invalid value is not converted" select="'1foo'"/>
            </x:scenario>
            <x:scenario label="value = 'foo,bar'">
                <x:call>
                    <x:param position="1" select="'foo,bar'"/>
                </x:call>
                <x:expect label="invalid value is not converted" select="'foo,bar'"/>
            </x:scenario>
            <x:scenario label="value = 'foo bar'">
                <x:call>
                    <x:param position="1" select="'foo   bar'"/>
                </x:call>
                <x:expect label="invalid value is not converted" select="'foo   bar'"/>
            </x:scenario>
        </x:scenario>

        <x:scenario label="type = 'IDREFS'">
            <x:call>
                <x:param position="2" select="'IDREFS'"/>
            </x:call>
            <x:scenario label="value = 'foo'">
                <x:call>
                    <x:param position="1" select="'foo'"/>
                </x:call>
                <x:expect label="converted value" select="'foo'"/>
            </x:scenario>
            <x:scenario label="value = '   foo   '">
                <x:call>
                    <x:param position="1" select="'   foo   '"/>
                </x:call>
                <x:expect label="converted value" select="'foo'"/>
            </x:scenario>
            <x:scenario label="value = '_foo'">
                <x:call>
                    <x:param position="1" select="'_foo'"/>
                </x:call>
                <x:expect label="converted value" select="'_foo'"/>
            </x:scenario>
            <x:scenario label="value = '1foo'">
                <x:call>
                    <x:param position="1" select="'1foo'"/>
                </x:call>
                <x:expect label="invalid value is not converted" select="'1foo'"/>
            </x:scenario>
            <x:scenario label="value = 'foo,bar'">
                <x:call>
                    <x:param position="1" select="'foo,bar'"/>
                </x:call>
                <x:expect label="invalid value is not converted" select="'foo,bar'"/>
            </x:scenario>
            <x:scenario label="value = 'foo bar'">
                <x:call>
                    <x:param position="1" select="'foo bar'"/>
                </x:call>
                <x:expect label="converted value" select="'foo bar'"/>
            </x:scenario>
            <x:scenario label="value = '    foo     bar   '">
                <x:call>
                    <x:param position="1" select="'    foo     bar   '"/>
                </x:call>
                <x:expect label="converted value" select="'foo bar'"/>
            </x:scenario>
            <x:scenario label="value = '    foo\nbar   '">
                <x:call>
                    <x:param position="1" select="'    foo&#xA;bar   '"/>
                </x:call>
                <x:expect label="invalid value is not converted" select="'foo&#xA;bar'"/>
            </x:scenario>
        </x:scenario>

        <x:scenario label="type = 'NMTOKENS'">
            <x:call>
                <x:param position="2" select="'NMTOKENS'"/>
            </x:call>
            <x:scenario label="value = 'foo'">
                <x:call>
                    <x:param position="1" select="'foo'"/>
                </x:call>
                <x:expect label="converted value" select="'foo'"/>
            </x:scenario>
            <x:scenario label="value = '   foo   '">
                <x:call>
                    <x:param position="1" select="'   foo   '"/>
                </x:call>
                <x:expect label="converted value" select="'foo'"/>
            </x:scenario>
            <x:scenario label="value = '_foo'">
                <x:call>
                    <x:param position="1" select="'_foo'"/>
                </x:call>
                <x:expect label="converted value" select="'_foo'"/>
            </x:scenario>
            <x:scenario label="value = '1foo'">
                <x:call>
                    <x:param position="1" select="'1foo'"/>
                </x:call>
                <x:expect label="invalid value is not converted" select="'1foo'"/>
            </x:scenario>
            <x:scenario label="value = 'foo,bar'">
                <x:call>
                    <x:param position="1" select="'foo,bar'"/>
                </x:call>
                <x:expect label="invalid value is not converted" select="'foo,bar'"/>
            </x:scenario>
            <x:scenario label="value = 'foo bar'">
                <x:call>
                    <x:param position="1" select="'foo bar'"/>
                </x:call>
                <x:expect label="converted value" select="'foo bar'"/>
            </x:scenario>
            <x:scenario label="value = '    foo     bar   '">
                <x:call>
                    <x:param position="1" select="'    foo     bar   '"/>
                </x:call>
                <x:expect label="converted value" select="'foo bar'"/>
            </x:scenario>
            <x:scenario label="value = '    foo\nbar   '">
                <x:call>
                    <x:param position="1" select="'    foo&#xD;&#xA;bar   '"/>
                </x:call>
                <x:expect label="invalid value is not converted" select="'foo&#xD;&#xA;bar'"/>
            </x:scenario>
            <x:scenario label="value = ' this\r\n also	 gets&#x20; normalized '">
                <x:call>
                    <x:param position="1" select="' this&#x0d;&#x0a; also	 gets&#x20; normalized '"/>
                </x:call>
                <x:expect label="invalid value is not converted" select="'this&#x0d;&#x0a; also gets normalized'"/>
            </x:scenario>
        </x:scenario>
        
    </x:scenario>
    <x:scenario label="Testing function mlml:attr-name" catch="true">
        <x:call function="mlml:attr-name"/>
        
        <x:scenario label="for default namespace">
            <x:call>
                <x:param xmlns="http://www.nkutsche.com/xmlml">
                    <attribute namespace="true">
                        <ws space="1" />
                        <name />
                        <eq />
                        <value>
                           <data>default-namespace.com</data>
                        </value>
                     </attribute>
                </x:param>
            </x:call>
            <x:expect label="result namespace" select="QName('', 'xmlns')"></x:expect>
        </x:scenario>

        <x:scenario label="for attribut in no namespace">
            <x:call>
                <x:param xmlns="http://www.nkutsche.com/xmlml">
                    <attribute>
                        <ws space="1" />
                        <name>attribute</name>
                        <eq />
                        <value />
                     </attribute>
                </x:param>
            </x:call>
            <x:expect label="result namespace" select="QName('', 'attribute')"></x:expect>
        </x:scenario>
    </x:scenario>
    
    <x:scenario label="Testing function mlml:hex-to-int">
        <x:call function="mlml:hex-to-int"/>

        <x:scenario label="0 = 0">
            <x:call>
                <x:param select="'0'"/>
            </x:call>
            <x:expect label="return value" select="0"/>
        </x:scenario>
        <x:scenario label="1 = 1">
            <x:call>
                <x:param select="'1'"/>
            </x:call>
            <x:expect label="return value" select="1"/>
        </x:scenario>
        <x:scenario label="a = 10">
            <x:call>
                <x:param select="'a'"/>
            </x:call>
            <x:expect label="return value" select="10"/>
        </x:scenario>
        <x:scenario label="A = 10">
            <x:call>
                <x:param select="'A'"/>
            </x:call>
            <x:expect label="return value" select="10"/>
        </x:scenario>
        <x:scenario label="F = 15">
            <x:call>
                <x:param select="'F'"/>
            </x:call>
            <x:expect label="return value" select="15"/>
        </x:scenario>
        <x:scenario label="10 = 16">
            <x:call>
                <x:param select="'10'"/>
            </x:call>
            <x:expect label="return value" select="16"/>
        </x:scenario>
        <x:scenario label="1A = 26">
            <x:call>
                <x:param select="'1A'"/>
            </x:call>
            <x:expect label="return value" select="26"/>
        </x:scenario>
        <x:scenario label="FF = 255">
            <x:call>
                <x:param select="'FF'"/>
            </x:call>
            <x:expect label="return value" select="255"/>
        </x:scenario>
        <x:scenario label="100 = 256">
            <x:call>
                <x:param select="'100'"/>
            </x:call>
            <x:expect label="return value" select="256"/>
        </x:scenario>
    </x:scenario>
</x:description>
